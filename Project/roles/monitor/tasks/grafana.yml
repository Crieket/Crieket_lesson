---
- name: Download Grafana
  get_url:
    url: "https://dl.grafana.com/oss/release/grafana-{{ grafana_version }}.linux-amd64.tar.gz"
    dest: "/tmp/grafana.tar.gz"

- name: Extract Grafana
  unarchive:
    src: "/tmp/grafana.tar.gz"
    dest: "/tmp"
    copy: no

- name: Install Grafana
  copy:
    src: "/tmp/grafana-{{ grafana_version }}/{{ item }}"
    dest: "/usr/local/bin/"
    owner: root
    group: root
    mode: '0755'
  loop:
    - bin/grafana-server
    - bin/grafana-cli

- name: Create Grafana directories
  file:
    path: "{{ item }}"
    state: directory
    owner: grafana
    group: grafana
  loop:
    - "/usr/share/grafana"
    - "/var/lib/grafana"
    - "/var/log/grafana"
    - "/etc/grafana"

- name: Copy Grafana files
  copy:
    src: "/tmp/grafana-{{ grafana_version }}/{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: grafana
    group: grafana
    remote_src: yes
  loop:
    - { src: "public/", dest: "/usr/share/grafana/public" }
    - { src: "conf/", dest: "/etc/grafana" }

- name: Create Grafana service file
  template:
    src: grafana.service.j2
    dest: "/etc/systemd/system/grafana.service"

- name: Create Grafana configuration
  template:
    src: grafana.ini.j2
    dest: "/etc/grafana/grafana.ini"
    owner: grafana
    group: grafana

- name: Reload systemd
  systemd:
    daemon_reload: yes

- name: Start and enable Grafana
  systemd:
    name: grafana
    state: started
    enabled: yes

- name: Clean up temporary files
  file:
    path: "/tmp/grafana-{{ grafana_version }}"
    state: absent
  file:
    path: "/tmp/grafana.tar.gz"
    state: absent